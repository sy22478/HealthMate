# Multi-stage Dockerfile for HealthMate Backend Development
# Stage 1: Development stage
FROM python:3.11-slim as development

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies including development tools
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    curl \
    git \
    vim \
    htop \
    procps \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --upgrade pip && \
    pip install -r requirements.txt

# Install development dependencies
RUN pip install \
    debugpy \
    ipython \
    ipdb \
    pytest-cov \
    pytest-asyncio \
    pytest-mock \
    black \
    isort \
    flake8 \
    mypy \
    pre-commit

# Create non-root user
RUN groupadd -r healthmate && useradd -r -g healthmate healthmate

# Create application directory
WORKDIR /app

# Copy application code
COPY app/ ./app/
COPY alembic/ ./alembic/
COPY alembic.ini .
COPY create_tables.py .

# Create logs directory
RUN mkdir -p /app/logs && chown -R healthmate:healthmate /app

# Switch to non-root user
USER healthmate

# Expose ports
EXPOSE 8000 8001

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command for development
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--log-level", "debug"] 