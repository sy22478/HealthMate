#!/usr/bin/env python3
"""
Test script to verify all MCP modules can be imported successfully
"""

def test_imports():
    """Test importing all MCP modules"""
    try:
        print("Testing imports...")
        
        # Test basic imports
        print("‚úì Importing sentence_transformers...")
        from sentence_transformers import SentenceTransformer
        
        print("‚úì Importing spacy...")
        import spacy
        
        print("‚úì Importing networkx...")
        import networkx as nx
        
        print("‚úì Importing MCP types...")
        from app.mcp.types import ChunkMetadata, DiagnosisResult, DiagnosisUrgency
        
        print("‚úì Importing MCP medical data...")
        from app.mcp.medical_data import EMERGENCY_KEYWORDS, SYMPTOM_DATABASE
        
        print("‚úì Importing MCP RAG server...")
        from app.mcp.rag_server import AdvancedRAGServer
        
        print("‚úì Importing MCP diagnosis server...")
        from app.mcp.diagnosis_server import DifferentialDiagnosisServer
        
        print("‚úì Importing enhanced knowledge base...")
        from app.services.enhanced_knowledge_base import EnhancedMedicalKnowledgeBase
        
        print("‚úì Importing enhanced chat router...")
        from app.routers.enhanced_chat import router as enhanced_chat_router
        
        print("\nüéâ All imports successful!")
        return True
        
    except Exception as e:
        print(f"\n‚ùå Import failed: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_spacy_model():
    """Test spaCy model loading"""
    try:
        print("\nTesting spaCy model...")
        import spacy
        nlp = spacy.load("en_core_web_sm")
        doc = nlp("This is a test sentence.")
        print(f"‚úì spaCy model loaded successfully. Processed text: {doc.text}")
        return True
    except Exception as e:
        print(f"‚ùå spaCy model failed: {e}")
        return False

def test_sentence_transformers():
    """Test sentence transformers"""
    try:
        print("\nTesting sentence transformers...")
        from sentence_transformers import SentenceTransformer
        model = SentenceTransformer('all-MiniLM-L6-v2')
        embeddings = model.encode("This is a test sentence.")
        print(f"‚úì Sentence transformers working. Embedding shape: {embeddings.shape}")
        return True
    except Exception as e:
        print(f"‚ùå Sentence transformers failed: {e}")
        return False

if __name__ == "__main__":
    print("HealthMate MCP Import Test")
    print("=" * 40)
    
    success = True
    success &= test_imports()
    success &= test_spacy_model()
    success &= test_sentence_transformers()
    
    if success:
        print("\n‚úÖ All tests passed! The MCP system is ready to use.")
    else:
        print("\n‚ùå Some tests failed. Please check the errors above.") 